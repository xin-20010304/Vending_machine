module key_counter_top(
   input wire clk,
	input wire rst_n,
	input wire [3:0] key,
	
	output wire [5:0] sel,
	output wire [7:0] seg
);
wire [3:0] flag;
wire [3:0] key_value;
wire [19:0] number;
key_count key_count_inst(
.clk(clk),
.rst_n(rst_n),
.key({flag[3]&&~key_value[3],flag[2]&&~key_value[2],flag[1]&&~key_value[1],flag[0]&&~key_value[0]}),
.number(number)
)
seg_decode seg_decode_inst(
.clk(clk),
.rst_n(rst_n),
.sel(sel),
.number(number),
.seg(seg)
);
sel_driver sel_driver_inst(
.clk(clk),
.rst_n(rst_n),
.sel(sel)
)
key_debouce key_debouce1(
.clk(clk),
.rst_n(rst_n),
.key(key[0]),
.flag(flag[0]),
.key_value(key_value[0])
);
key_debouce key_debouce2(
.clk(clk),
.rst_n(rst_n),
.key(key[1]),
.flag(flag[1]),
.key_value(key_value[1])
);
key_debouce key_debouce3(
.clk(clk),
.rst_n(rst_n),
.key(key[2]),
.flag(flag[2]),
.key_value(key_value[2])
);
key_debouce key_debouce4(
.clk(clk),
.rst_n(rst_n),
.key(key[3]),
.flag(flag[3]),
.key_value(key_value[3])
);
endmodule
